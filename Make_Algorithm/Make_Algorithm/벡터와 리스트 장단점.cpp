/*

- Vector의 장점 -
미리 일정 크기의 메모리를 잡아두기 때문에
매번 메모리를 할당해야하는 List 보다 push_back이 빠르다
(배열과 같은 방식으로 동작한다)
중간에 값을 추가하는 Insert의 경우 Vector의 크기만큼 배열을 재구성해야하기 때문에
속도가 느리다.

- Vector의 단점 - 
Linked List와 다르게 메모리를 일일히 해제해줘야하기 때문에 속도가 오래걸린다.
배열이 가득차면 배열의 크기를 2배로 만들기때문에 최대 크기가 정해져있다.

- 리스트의 장점 - 
매번 메모리를 새로 할당하기때문에 중간 값의 삭제와 추가가 빠르다.


정리 :
맨뒤에 추가 삭제가 일어나는 경우 Vector가 빠르며 메모리도 적게 먹는다.
따라서, 순서와 상관없거나 순차적으로만 추가,삭제되는 데이터는 Vector를 쓰는게 좋다.
순서가 중요하여 리스트의 중간위치에 값이 추가, 삭제가 되는 경우 List를 사용하는게 좋다
(메모리를 더 먹지만 속도가 빠르다)


*/